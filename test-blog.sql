-- phpMyAdmin SQL Dump
-- version 5.2.0
-- https://www.phpmyadmin.net/
--
-- Хост: localhost
-- Время создания: Ноя 17 2022 г., 16:07
-- Версия сервера: 10.8.4-MariaDB
-- Версия PHP: 8.1.9

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- База данных: `test-blog`
--

-- --------------------------------------------------------

--
-- Структура таблицы `failed_jobs`
--

CREATE TABLE `failed_jobs` (
  `id` bigint(20) UNSIGNED NOT NULL,
  `uuid` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `connection` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `queue` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `payload` longtext COLLATE utf8mb4_unicode_ci NOT NULL,
  `exception` longtext COLLATE utf8mb4_unicode_ci NOT NULL,
  `failed_at` timestamp NOT NULL DEFAULT current_timestamp()
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- --------------------------------------------------------

--
-- Структура таблицы `migrations`
--

CREATE TABLE `migrations` (
  `id` int(10) UNSIGNED NOT NULL,
  `migration` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `batch` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Дамп данных таблицы `migrations`
--

INSERT INTO `migrations` (`id`, `migration`, `batch`) VALUES
(1, '2014_10_12_000000_create_users_table', 1),
(2, '2014_10_12_100000_create_password_resets_table', 1),
(3, '2019_08_19_000000_create_failed_jobs_table', 1),
(4, '2019_12_14_000001_create_personal_access_tokens_table', 1),
(5, '2022_11_13_215149_add_column_deleted_at_to_posts_table', 2),
(6, '2022_11_11_235814_create_posts_table', 3),
(7, '2020_07_11_151756_create_roles_table', 4),
(8, '2020_07_11_151834_create_user_role_table', 5),
(9, '2020_07_11_151894_create_permissions_table', 5),
(10, '2020_07_11_151925_create_role_permission_table', 5);

-- --------------------------------------------------------

--
-- Структура таблицы `password_resets`
--

CREATE TABLE `password_resets` (
  `email` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `token` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- --------------------------------------------------------

--
-- Структура таблицы `permissions`
--

CREATE TABLE `permissions` (
  `id` int(10) UNSIGNED NOT NULL,
  `name` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `slug` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `description` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Дамп данных таблицы `permissions`
--

INSERT INTO `permissions` (`id`, `name`, `slug`, `description`, `created_at`, `updated_at`) VALUES
(1, 'administrate', 'administrate', 'Total administrate of users and content', '2022-11-14 18:08:42', '2022-11-14 18:08:42'),
(2, 'view record', 'view-record', 'Permission to view record', '2022-11-14 18:08:42', '2022-11-14 18:08:42'),
(3, 'create record', 'create-record', 'Permission to create record', '2022-11-14 18:08:42', '2022-11-14 18:08:42'),
(4, 'update record', 'update-record', 'Permission to update record', '2022-11-14 18:08:42', '2022-11-14 18:08:42'),
(5, 'delete record', 'delete-record', 'Permission to delete record', '2022-11-14 18:08:42', '2022-11-14 18:08:42'),
(6, 'publish record', 'publish-record', 'Permission to publish record', '2022-11-14 18:08:42', '2022-11-14 18:08:42');

-- --------------------------------------------------------

--
-- Структура таблицы `personal_access_tokens`
--

CREATE TABLE `personal_access_tokens` (
  `id` bigint(20) UNSIGNED NOT NULL,
  `tokenable_type` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `tokenable_id` bigint(20) UNSIGNED NOT NULL,
  `name` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `token` varchar(64) COLLATE utf8mb4_unicode_ci NOT NULL,
  `abilities` text COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `last_used_at` timestamp NULL DEFAULT NULL,
  `expires_at` timestamp NULL DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- --------------------------------------------------------

--
-- Структура таблицы `posts`
--

CREATE TABLE `posts` (
  `id` bigint(20) UNSIGNED NOT NULL,
  `title` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `content` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  `deleted_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Дамп данных таблицы `posts`
--

INSERT INTO `posts` (`id`, `title`, `content`, `created_at`, `updated_at`, `deleted_at`) VALUES
(1, 'Laravel: разработка пакетов', 'Каждый разработчик рано или поздно сталкивается с необходимостью повторного использования собственного кода. В проектах PHP для этих целей создаются пакеты, устанавливаемые с помощью Composer. При этом пакеты могут быть абстрагированы от каких-либо фреймворков, либо могут быть предназначены для использования в конкретном PHP-фреймворке. В данной статье рассказывается о том, как создать PHP-пакеты для фреймворка Laravel, но материал будет полезен и тем, кто собирается разрабатывать любые другие PHP-пакеты (как публичные, так и приватные).\r\n\r\nДля лучшего понимания данного материала рекомендуется ознакомиться с разделом о разработке пакетов в официальной документации Laravel. А для более детального изучения темы будет полезен данный ресурс.\r\n\r\nДанная статья в большей мере ориентирована на начинающих разработчиков.\r\n\r\nРазработка пакета\r\nДля разработки Laravel-пакета будем использовать пакет orchestral/testbench. Данный инструмент позволяет разрабатывать Laravel-пакеты по методологии TDD (Test-driven development). В своих зависимостях он содержит ядро фреймворка Laravel и предоставляет доступ ко всем возможностям функциональных (Feature) тестов Laravel.\r\n\r\nС применением orchestral/testbench написаны официальные пакеты Laravel (sanctum, telescope, horizon и т.д.), а также многие другие Laravel-пакеты от комьюнити, например пакеты от компании Spatie (laravel-permission, laravel-query-builder). Чтобы понять, как пользоваться orchestral/testbench, достаточно ознакомиться с кодом тестов перечисленных пакетов. Если вы имеете достаточный опыт в написании тестов в Laravel, можете прямо сейчас переходить по ссылкам и изучать код тестов указанных пакетов.\r\n\r\nВ рамках данного туториала разрабатывается пакет laravel-example. Его код можно найти здесь. Это демонстрационный пакет, в котором мы задействуем такие основные компоненты фреймворка Laravel, как миграции, модели, файлы конфигурации, роуты, контроллеры, консольные команды.\r\n\r\nДля разработки потребуются интерпретатор PHP и Composer.\r\n\r\nПриступим к разработке пакета и первым делом создадим директорию laravel-example.\r\n\r\nВ этой директории необходимо создать файл composer.json. Его можно создать двумя способами.\r\n\r\nПервый способ - создать файл с помощью Composer. Для этого необходимо выполнить консольную команду composer init, после чего Composer попросит ввести в консоль ответы на вопросы относительно создаваемого пакета.\r\n\r\nВторой способ - создать файл composer.json вручную и затем поместить в него некий заготовленный шаблон конфигурации, например такой:', '2022-11-08 13:00:07', '2022-11-14 20:27:56', '2022-11-14 20:27:56'),
(2, 'Laravel. Интернет-ресурсы', 'Привет Хабр!\r\n\r\nКогда я узнал, что на Хабре у Laravel появился собственный хаб, то сразу понял о чем будет моя первая статья для Хабрахабр. Точнее не статья, а обзор интернет-ресурсов о Laravel, большую часть которых я использую для того, чтобы каждый день радовать участников нашего сообщества свежими новостями. И, конечно же, это не все ресурсы, а только самые интересные и полезные. А если кому-то из вас интересны не только ссылки на интернет-ресурсы, но и сами материалы по Laravel, то с радостью приглашаю к нам в группу ВКонтакте. Так получилось, что за все время своего существования, а это всего 10 месяцев, наша группа стала самым большим и полным в мире ресурсом по количеству материалов о фреймворке Laravel. И другого такого Laravel интернет-ресурса я не знаю.', '2022-11-07 13:00:38', '2022-11-13 21:00:00', NULL),
(3, 'Обзор экосистемы пакетов Laravel', 'В мире Laravel пакеты играют важную роль. Насколько важна эта роль и какие пакеты существуют? Чтобы это узнать, мы взяли данные из API Packagist.org и отфильтровали пакеты Laravel.\r\n\r\nКак мы определяли пакеты Laravel? С помощью файла composer.json. Мы относили пакет к экосистеме Laravel, если поля name, description, keywords или type содержали строку laravel. Также пакет определялся как пакет Laravel, если он содержал laravel/framework или любой компонент поддерева  illuminate/* в качестве зависимости. И наконец, ключ laravel в поле extra также являлся указателем на принадлежность пакета к экосистеме фреймворка Laravel.\r\n\r\nХотя эти критерии не гарантируют, что пакет относится исключительно к Laravel, они показывают, что пакет был создан с расчетом на использование с Laravel.\r\n\r\nНаиболее популярные пакеты\r\n\r\nЕсли бесхитростно взглянуть на список самых загружаемых пакетов, результаты не порадуют: это базовые пакеты и пакеты с большим числом использований вне проектов Laravel.\r\n\r\n| Package | Monthly downloads | |-------------------------|-------------------| | nesbot/carbon | 4084214 | | laravel/framework | 2987907 | | laravel/tinker | 2455355 | | fideloper/proxy | 2376631 | | nunomaduro/collision | 1510258 | | intervention/image | 1099989 | | facade/ignition | 966800 | | facade/flare-client-php | 934651 | | composer/installers | 803222 | | illuminate/support | 756189 |\r\n\r\nВозможно, более интересный рейтинг можно получить, исключив эти «ложноположительные» результаты. Мы вручную отфильтровали 30 наиболее популярных пакетов, которые были созданы для проектов Laravel и целенаправленно устанавливаются. Также мы в общих чертах систематизировали области назначения этих пакетов.\r\n', '2022-11-22 13:01:05', '2022-11-15 13:01:29', NULL),
(4, 'Прикручиваем шаблонизатор Blitz к Laravel', 'Среди некоторого количества шаблонизаторов для php есть один, который мы долгое время активно использовали и используем в своих проектах. Это Blitz, который являясь расширением, во-первых достаточно быстрый, во-вторых реализует давнюю мечту - максимальное отделение представления от логики.\r\n\r\nПока наши старые проекты были написаны на нативном php, пачке самописного кода и всякого «исторического наследия» проблем особых и не было. Но пришел момент когда некоторые старые куски мы решили переписать «жестко отрефакторить» и заодно влиться во вселенную Laravel. Но для ускорения процесса, перспектива переделать быстро десятки существующих шаблонов на Blade мне показалась такой себе идеей, поэтому надо было как-то прикрутить Blitz к Laravel, желательно в стиле самого Laravel. Ну типа там инсталяция в пару команд и все такое.\r\n\r\nС другой стороны, в Blade есть некоторые фичи, которых нет в Blitz, как-то наследование шаблонов через @section/@yeld и внедрение хелперов. И было бы неплохо их добавить, для упрощения дальнейшего перехода на Blade, если будет надо. Сказано – сделано. На коленке за пару-тройку вечеров получился некий адаптер, с которым и хочу ознакомить. Собственно нижележащий текст это вольная попытка озвучить по-русски README.md, где я вообще был лаконичен как никогда', '2022-11-22 21:00:00', '2022-11-20 21:00:00', NULL),
(5, 'Как отправлять электронную почту через PHPMailer из приложений Laravel 8', 'По умолчанию в Laravel 8 предлагают отправлять электронную почту через почтовый API на базе библиотеки SwiftMailer (обратите внимание, что на момент перевода статьи библиотека SwiftMailer является более неподдерживаемой и в Larevel 9 используют ее следующую версию Symfony Mailer), которая изначально встроена в Laravel 8. Обычно в web-приложениях на базе PHP для отправки писем используется функция mail(), но в данной статье будет описан алгоритм использования пакета PHPMailer. PHPMailer опенсорсный пакет - его легко устанавливать и использовать в приложениях. Он включает в себя большое количество фич таких как возможность множественной отправки писем с параметрами To, CC, BCC, и Reply-to-addresses, прикрепления как non-inline так и inline вложений, он также защищает от Header Injection атак в соответствии со стандартами безопасности, что делает его использование максимально безопасным.\r\n\r\nВ данной статье будет описано как отправлять письма с помощью PHPMailer из приложений Laravel 8 через SMTP серверы, являющиеся наиболее рекомендованными для отправки электронных писем из скриптов.\r\n\r\nСодержание\r\n\r\nОтправка электронных писем с использованием PHPMailer из Laravel 8\r\n\r\nУстановка пакета PHPMailer\r\n\r\nСоздание контроллера PHPMailerController.php\r\n\r\nСоздание маршрутов для PHPMailer\r\n\r\nСоздание представления формы отправки писем с помощью PHPMailer\r\n\r\nНастройка отправки писем через Gmail SMTP сервер\r\n\r\nЗаключение\r\n\r\nОтправка электронных писем с использованием PHPMailer из Laravel 8\r\nУстановка пакета PHPMailer\r\nДля установки пакета PHPMailer в приложение Laravel 8 воспользуемся пакетным менеджером composer. Мы также можем использовать установщик Laravel  (Laravel Installer). Откроем командную строку и введем в нее:\r\n\r\ncomposer require phpmailer/phpmailer', '2022-12-25 13:01:38', '2022-12-04 21:00:00', NULL),
(6, '40 лучших инструментов и ресурсов Laravel', 'Привет, Хабр! Представляю вашему вниманию подборку, которая является переводом моей оригинальной статьи.\r\n\r\nЕсли есть идеи что добавить в подборку — буду рад пообщаться в комментах. Наслаждайтесь!\r\n\r\nРесурсы для изучения Laravel\r\n\r\nЧто я лично считаю классным в Laravel, так это то, что можно легко обучиться работе в нем. Экосистема Laravel это не только инструменты для разработки. У данного фреймворка есть отличная база платформ и курсов, которые помогают изучить основные тонкости работы. Вот некоторые из них:\r\n\r\nLaracasts\r\n\r\nLaracasts это обучающий ресурс для веб-разработчиков. Ресурс содержит в себе отличные скринкасты о Laravel, Vue, общих понятиях PHP, базах данных и многое другое. Можно сказать, что это как Netflix для вашей будущей карьеры. Обучение можно начать с Laravel from scratch и всегда оставаться в курсе событий с помощью What’s new in Laravel.\r\n\r\nTest Driven Laravel\r\n\r\nЕсли мы говорим о техниках разработки, то я предпочитаю использовать разработку через тестирование (TDD). С Laravel эту технику очень легко использовать. Обучиться этому можно с помощью курса Test Driven Laravel. Пройдите видео-курс и сможете выстроить более надежное приложение.\r\n\r\nConfident Laravel\r\n\r\nКаждый знает, что нужно покрывать свой код тестами, однако только некоторые приложения содержат тесты. Видео-курс Confident Laravel поможет вам устранить барьеры перед написанием тестов. Каждый опытный и амбициозный разработчик пишет тесты. И, конечно же, каждый хочет, чтобы этот процесс занимал меньше времени. Confident Laravel научит вас писать тесты для вашего Laravel приложения и быть полностью в них уверенными.\r\n\r\nLaracon Online\r\n\r\nLaracon Online — это ежегодная онлайн конференция. Это самый удобный и доступный способ для каждого разработчика почувствовать себя участником конференции Laracon.\r\n\r\nEffective PHP\r\n\r\nЯ настоятельно советую просмотреть видео-курс Нуно Мадуро Writing Effective PHP. Это станет значительным вкладом в образование каждого PHP разработчика. Этот курс обучает тому, как писать код коротко и ясно, а также объясняет основные принципы избежания багов и многое другое.\r\n\r\nLaravel Core Adventures\r\n\r\nLaravel Core Adventures — это отличный видео-курс об основных концепциях Laravel, который поможет не только получить знания, но и приятно провести время.\r\n\r\nКурс Build a Chatbot\r\n\r\nКурс Build a chatbot научит вас как разрабатывать, расширять и тестировать чат боты и голосовые боты с помощью PHP.\r\n\r\nLaravel Certification\r\n\r\nНу и конечно же, если вы уже получили все необходимые знания и навыки в разработке с Laravel, вы можете подтвердить их с помощью программы сертификации Laravel Certification.\r\n\r\nСообщество Laravel\r\n\r\nСам по себе Laravel уже отличный фреймворк. Но его постоянное развитие очень тесно связано с его сообществом. Разработчики постоянно делятся своим опытом и наработками, дают подсказки и советы, а также отмечают те вещи, которые нуждаются в улучшении. Я бы хотел отметить некоторые из ресурсов, которые необходимы для любого Laravel разработчика.\r\n\r\nLaracasts Forum\r\n\r\nLaracasts Forum это площадка, где разработчики делятся своим опытом и туториалами. Здесь вы всегда можете попросить совет и обсудить возникшие вопросы.\r\n\r\nLaravelIO\r\n\r\nLaravelIO — замечательный ресурс, где также обсуждаются вопросы разработки. Там вы сможете найти ответы на различные вопросы и поделиться своим опытом.\r\n\r\nSlack-канал Larachat\r\n\r\nLarachat Slack Workspace — это Slack пространство с различными каналами, которые посвящены разнообразным тематикам.\r\n\r\nLaravel News\r\n\r\nLaravel News — это официальный новостной ресурс от Laravel, а также еженедельная информационная почтовая рассылка о последних трендах в сообществе Laravel.\r\n\r\nLaravel Podcast\r\n\r\nLaravel Podcast — это отличная площадка для обсуждения основных трендов в сообществе Laravel.\r\n\r\nLaraJobs\r\n\r\nLaraJobs — это ресурс для поиска работы и размещения вакансий на должности связанные с Laravel, PHP разработкой и другими техническими специальностями.\r\n\r\nLaravel Blog\r\n\r\nLaravel Blog — это официальный блог Laravel, где можно найти всю информацию о последних релизах Laravel и различных событиях, а также увидеть подкасты Тэйлора Отвела (создателя Laravel).\r\n\r\nЭкосистема Laravel\r\n\r\nЭкосистеме Laravel определенно есть что предложить разработчикам. Я обычно стараюсь не восхвалять ничего чем пользуюсь, а больше склонен критиковать. Однако когда речь идет об экосистеме Laravel, я просто не могу удержаться. Здесь я бы хотел упомянуть несколько оригинальных и очень полезных инструментов, которые могут пригодится в разработке ваших проектов.\r\n\r\nОкружение для Разработки\r\n\r\nLaravel Valet\r\n\r\nLaravel Valet с легкостью установит минималистичное окружение разработки для вашего Laravel приложения. Поистине замечательный инструмент для пользователей MacOS.\r\n\r\nОсновные характеристики:\r\n\r\nБыстрый (использует приблизительно 7 MB оперативной памяти)\r\nЛегко устанавливается\r\nНе нуждается в конфигурации (нужно только создать папку в корневой директории)\r\nЛегкий в использовании (обеспечивает простые инструменты командной строки)\r\nНе нуждается в Vagrant или Docker\r\nПоддерживает туннели ngrok\r\nПозволяет вручную устанавливать дополнительные сервисы (такие как Redis или MySQL) с помощью Homebrew\r\n\r\nLaravel Valet — это опенсорс софт. Всю документацию к нему можно найти на официальном сайте Laravel.\r\n\r\nLaravel Homestead\r\n\r\nLaravel Homestead — это подготовленная Vagrant сборка, которая обеспечивает отличное окружение для разработки. У вас нет потребности в установке PHP, веб сервера или какого-либо другого программного серверного обеспечения на локальный компьютер.\r\n\r\nОсновные характеристики:\r\n\r\nРаботает на всех операционных системах: Mac, Windows и Linux\r\nVagrant коробки легко удаляются и пересоздаются\r\nВсе необходимые сервисы доступны “прямо из коробки” (такие как PHP 7.3, Nginx, MySQL, Redis и другие)\r\nОбеспечивает возможность использование общей папки, между виртуальной-машиной и основной\r\n\r\nLaravel Homestead — это также опенсорс софт. Всю документацию для его установки можно найти на официальном сайте Laravel.\r\n\r\nLaravel Расширения и Пакеты\r\n\r\nLaravel Passport\r\n\r\nLaravel Passport — максимально простой инструмент для API аутентификации. Он предоставляет полную реализацию сервера OAuth2 для вашего приложения.\r\n\r\nОсновные характеристики:\r\n\r\nУпрощает процесс установки сервера OAuth2 и делает его легким в использовании благодаря инструменту командной строки\r\nПоставляется со всеми необходимыми миграциями базы данных, контроллерами и роутами\r\nСодержит встроенные компоненты Vue.JS\r\n\r\nLaravel Passport находится в свободном доступе. Всю необходимую документацию для установки вы можете найти здесь.\r\n\r\nLaravel Scout\r\n\r\nДобавьте полнотекстовый поиск к вашим Eloquent-моделям с Laravel Scout. Это удобный софт для синхронизации поисковых индексов с вашими записями Eloquent.\r\n\r\nОсновные характеристики:\r\n\r\nПоставляется с драйвером Algolia\r\nПозволяет написать свой драйвер вместо Algolia и дополнить Scout своей собственной реализацией поиска, например: Elasticsearch, MySQL full-text search, TNTSearch и т.д.\r\n\r\nLaravel Scout является опенсорс софтом. На официальном сайте вы можно узнать про него больше.\r\n\r\nLaravel Spark\r\n\r\nLaravel Spark — это удобный инструмент для ускорения разработки SaaS приложений.\r\n\r\nОсновные характеристики:\r\n\r\nОтличный инструмент для разработки вашего продукта\r\nПозволяет сфокусироваться на привнесении ценности приложения для пользователя\r\nОбрабатывает авторизацию пользователей, запланированные события, платежи и многое другое\r\nМаксимально кастомизируемый\r\nДает больше возможностей вашему приложению с помощью Vue.JS\r\nУкомплектован Stripe.js v3 для обеспечения максимального уровня защиты для процессов оплаты и подписки\r\nИспользует Bootstrap 4.0\r\nПоддерживает последние версии Laravel\r\nИмеет полную локализацию\r\nУкомплектован удобной и интуитивной панелью настроек\r\nПозволяет сфокусироваться на бизнес-логике и увидеть как будет выглядеть конечный продукт\r\n\r\nLaravel Spark это платный пакет, который можно купить по цене $99 за сайт или $299 без лимита на количество сайтов. Больше информации можно найти на официальном сайте.\r\n\r\nLaravel Nova\r\n\r\nLaravel Nova — это панель администрирования для Laravel с великолепным UI и UX дизайном, которая ускоряет процесс разработки.\r\n\r\nОсновные характеристики:\r\n\r\nОбеспечивает полный CRUD-интерфейс для ваших Eloquent-моделей\r\nЛегко добавляется к вашему Laravel приложению, как к новому, так и к уже существующему\r\nКонфигурируется с помощью простого PHP кода\r\nОтображает различные метрики для вашего приложения (включает хелперы для построения запросов)\r\nИнтегрируется с политиками авторизации Laravel (даже для свзязей, линз, полей и — инструментов)\r\nПоставляется с Nova CLI для обеспечения полного контроля над работой с Nova\r\nПредоставляет откладывать действия в очередь\r\nПозволяет добавлять линзы для контроля над Eloquent запросами\r\nПредоставляет возможность создавать собственные инструменты, с помощью командной строки\r\nМожно интегрировать с Laravel Scout для получения сверхбыстрых результатов поиска\r\nСодержит встроенные фильтры для псевдо удаленных ресурсов\r\nПоддерживает последние версии Google Chrome, Apple Safari и Microsoft Edge\r\nОтлично разработанная панель Nova имеет стоимость от $99 до $199 за проект. Всю информацию можно найти здесь.\r\n\r\nLaravel Dusk\r\n\r\nЕсли вы хотите протестировать свое приложения и увидеть его глазами пользователя, попробуйте Laravel Dusk. Этот инструмент позволяет автоматически тестировать приложение с через браузер с помощью удобного для разработчика API. Laravel Dusk по умолчанию поставляется с Chromedriver.\r\n\r\nОсновные характеристики:\r\n\r\nНе требует установки JDK или Selenium (но вы можете использовать любой Selenium драйвер если хотите)\r\nЯвляется полезным инструментом для веб-приложений использующих javascript\r\nУпрощает процесс тестирования различных кликабельных элементов вашего приложения\r\nСохраняет скриншоты и вывод браузерной консоли для неуспешных тестов, так что вы сразу сможете понять, что пошло не так\r\n\r\nИнструмент находится в открытом доступе. Более детальную информацию о Laravel Dusk можно найти на официальном сайте.\r\n\r\nLaravel Socialite\r\n\r\nLaravel Socialite — это пакет, который обеспечивает гибки интерфейс для аутентификации с OAuth провайдерами, таких как Facebook, Twitter, Google, LinkedIn, GitHub и многих других.\r\n\r\nОсновные характеристики:\r\n\r\nПрост в использовании\r\nСодержит практически всю необходимую логику для реализации аутентификации с помощью соц. сетей\r\nШироко поддерживается сообществом с множеством готовых провайдеров\r\n\r\nВсю необходимую информацию касательно Laravel Socialite можно найти здесь.\r\n\r\nLaravel Echo\r\n\r\nLaravel Echo — это JavaScript библиотека, которая позволяет вам подписываться на каналы и прослушивать транслируемые события через WebSoсkets.\r\n\r\nОсновные характеристики:\r\n\r\nПозволяет реализовывать обновления в реальном времени в вашем приложении\r\nОбеспечивает любые типы каналов (public, private и presence)\r\nДает возможность транслировать P2P события с помощью метода whisper\r\nРаботает с популярными решениями “прямо из коробки”, такие как сервис Pusher или библиотека Socket.IO\r\n\r\nLaravel Echo можно установить бесплатно. Вся необходимая документация есть на официальном сайте.\r\n\r\nLaravel Medialibrary\r\n\r\nПакет Laravel Medialibrary ассоциируетвсе типы файлов с Eloquent-моделями. Этот пакет делает работу с медиа-объектами удивительно легкой.\r\n\r\nОсновные характеристики:\r\n\r\nПозволяет напрямую переносить любые медиа-файлы из интернета с помощью url\r\nПозволяет вам использовать собственную структуру директорий\r\nДает возможность определить конверсии файла. Размеры изображений, регулировки, эффекты и другое\r\nОбеспечивает автоматическую оптимизацию изображений\r\nПозволяет создать несколько медиа-коллекций для одной Eloquent-модели\r\n\r\nLaravel Medialibrary открывает огромное количество возможностей. Всю документацию для установки можно найти здесь.\r\n\r\nLaravel Mix\r\n\r\nLaravel Mix (в прошлом назывался Laravel Elixir) — это инструмент, который даёт вам практически полностью управляемый процесс сборки фронтенда. Он обеспечивает понятный и удобный API для определения базовых этапов сборки Webpack для вашего Laravel приложения.\r\n\r\nОсновные характеристики:\r\n\r\nОбеспечивает широкий API удовлетворяющий практически все ваши нужды\r\nРаботает как обёртка над Webpack и позволяет расширить его\r\nИсключает все трудности связанные с установкой и работой с Webpack\r\nРаботает с современными инструментами javascript и фреймворками: Vue.JS, React.JS, Preact, TypeScript, Babel, CoffeScript\r\nТранспилирует и связывает Less, Sass и Stylus в CSS файлы\r\nПоддерживает BrowserSync, Hot Reloading, Assets versioning, Source Mapping “прямо из коробки”\r\n\r\nLaravel Mix можно установить бесплатно. Всю документацию можно увидеть на официальном сайте.\r\n\r\nLaravel Cashier\r\n\r\nLaravel Cashier — это пакет, который значительно упрощает процесс биллинговых подписок. Хотя я и считаю, что PHP библиотека Stripe сама по себе хороша, но на прямую ее использовать гораздо сложнее. Cashier как раз позволяет избежать потенциальных проблем и упростить управление подписками.\r\n\r\nОсновные характеристики:\r\n\r\nУпрощает использование сервиса оплаты подписок Stripe\r\nПростая в использовании и понимании кодовая база\r\nДает библиотеке Stripe PHP Library понятный и интуитивный интерфейс\r\nРаботает с купонами, временными подписками, одноразовыми платежами, генерирует PDF инвойсы и многое другое\r\nПредоставляет совместимость с нормами SCA для Европы\r\n\r\nПакет абсолютно бесплатный. Установите Laravel Cashier с помощью всей необходимой документации.\r\n\r\nLaravel Envoy\r\n\r\nLaravel Envoy — очень полезный инструмент запуска задач с чистым и минималистичным синтаксисом.\r\n\r\nОсновные характеристики:\r\n\r\nУпрощает процесс развертывания\r\nИспользует синтаксис в стиле Blade\r\nМожет использоваться вне фреймворка Laravel (и даже PHP)\r\nОчень прост в конфигурировании\r\nИмеет функциональность “историй” которые группируют несколько задачпод одним удобным именем. Таким образом вы можете группировать небольшие и конкретные задачи в более большие. Каждая “история” может быть запущена как обычная задача\r\nПозволяет запускать задачи на нескольких серверах\r\nПозволяет параллельное выполнение\r\nПоддерживает рассылку уведомлений в Slack и Discord (вы сможете получать уведомления после исполнения каждой задачи)\r\n\r\nLaravel Envoy — это бесплатный инструмент, документацию к которому можно получить здесь.\r\n\r\nLaravel Horizon\r\n\r\nLaravel Horizon — это пакет для отслеживания ключевых показателей системы ваших очередей Redis.\r\n\r\nОсновные характеристики:\r\n\r\nПозволяет отслеживать очереди с понятным веб UI\r\nОбеспечивает детализированный и доступный интерфейс для просмотра и повторного выполнения неуспешно завершившихся задач\r\nПозволяет отслеживать соответствующие метрики во время выполнения (производительность задач, повторные запуски и неудачи) в реальном времени\r\nВыводит недавние повторные запуски задач, непосредственно на детальной странице неудачно завершившихся задач\r\nХранит все конфигурации воркера очередей в одном конфигурационном файле (таким образом, вся конфигурация находится под системой контроля версий)\r\nУпрощает процесс коллаборации с командой\r\nПозволяет использовать автоматический балансировщик нагрузки для ваших процессов рботающих с воркерами очередей\r\nИмеет полезные уведомления\r\nПозволяет вам тегировать задачи (и автоматически назначает тэги большинству задач)\r\n\r\nLaravel Horizon доступен бесплатно. Всю документацию можно найти на официальном сайте.\r\n\r\nBotMan Studio\r\n\r\nBotMan Studio — это приложение выстроенное на фреймворке Laravel для более эффективной разработки ваших чат ботов.\r\n\r\nОсновные характеристики:\r\n\r\nПредоставляет реализацию web-драйвера. Вы можете разработать ваш чат бот локально и взаимодействовать с ним через Vue.JS чат виджет\r\nПодходит для различных платформ (Slack, Telegram, Amazon Alexa, Cisco Spark, Facebook Messenger, Hangouts Chat, HipChat и других)\r\nЕго логика может быть использована для написания собственного чат бота конкретно для вашего приложения\r\nОбеспечивает инструменты для тестирования ваших чат ботов\r\nПоддерживает мидлвары, NLP (Natural Language Platforms), извлечение информации пользователя и ее хранение\r\n\r\nBotMan Studio можно установить с помощью всей необходимой документации.\r\n\r\nLaravel Tenancy\r\n\r\nLaravel Tenancy — это инструмент для разработки многопользовательских Laravel платформ.\r\n\r\nОсновные характеристики:\r\n\r\nОбеспечивает быстрое решение для Laravel без потери гибкости\r\nПозволяет вам использовать метод скаффолдинга для многопользовательских SaaS платформ вне зависимости от сложности проекта\r\nОбеспечивает понятное разделение активов (assets) и баз данных\r\nПоставляется с закрытой и опциональной интеграцией в веб сервер\r\nОтлично подходит для маркетинговых компаний, которые предпочитают повторно использовать функционал для других проектов\r\nПозволяет добавлять конфигурации, код, маршруты и т.д. для конкретного арендатора\r\nОбеспечивает туториалы по интеграции с такими популярными решениями как Laravel Permissions и Laravel Medialibrary\r\n\r\nПакет Laravel Tenancy бесплатный для проектов любого типа. Всю необходимую информацию можно найти здесь.\r\n\r\nLumen\r\n\r\nЕсли у вас нет необходимости использовать полный фреймворк Laravel, то вам определенно понравится Lumen. Это микро-фреймворк, который минимизирует процессы загрузки.\r\n\r\nОсновные характеристики:\r\n\r\nРаботает очень быстро\r\nОтлично подходит даже если нужна поддержка как веб, так и мобильного приложения\r\nОчень полезен для микро-сервисов и различных API\r\nПозволяет работать с Eloquent ORM, и другими Laravel компонентами без использования полного фреймворка\r\nУпрощает процессы роутинга, кэширования и другие\r\n\r\nLumen — опенсорс софт. Вся необходимая информация по нему находится здесь.\r\n\r\nLaravel Telescope\r\n\r\nLaravel Telescope — это безупречный ассистент по отладке для Laravel приложений. Чтобы понять, что я имею в виду, представьте себе что самый лучший дебаггер который вы когда-либо использовали стал отдельным UI с самыми удобными инструментами. Вот такой этот Laravel Telescope.\r\n\r\nОсновные характеристики:\r\n\r\nУпрощает процесс разработки\r\nОбеспечивает удобный интерфейс для отслеживания и отладки многих аспектов вашего приложения\r\nРасширяет горизонты процесса разработки давая прямой доступ к широкому спектру информации\r\nСнижает количество багов и помогает понять как улучшить приложение\r\nДает понимание запросов поступающих к вашему приложению. Обеспечивает четкое понимание всех возникающих исключений, запросов базы данных, почты, логов, операций кэширования, уведомлений и многого другого\r\nСобирает информацию относительно того, сколько времени занимает процесс выполнения всех необходимых команд и очередей\r\n\r\nУстанавливайте Laravel Telescope бесплатно. Вся документация содержится на официальном сайте.\r\n\r\nLaravel WebSockets Package\r\n\r\nWebSockets для Laravel — это пакет, который так ждали разработчики. Он максимально упрощает реализацию WebSockets сервера в Laravel.\r\n\r\nОсновные характеристики:\r\n\r\nПолностью берет на себя серверную часть WebSockets\r\nЗаменяет Pusher и Laravel Echo Server\r\nОснован на Ratchet, но не требует от вас настраивать Ratchet самостоятельно\r\nУкомплектован панелью отладки, работающей в реальном времени\r\nПредоставляет график в реальном времени, что позволяет отслеживать ключевые метрики WebSockets (пиковые соединения, количество отправленных сообщений и сообщения поступающие по API)\r\nМожет использоваться в многопользовательских приложениях\r\nПоставляется с сообщениями протокола pusher (все пакеты, которые вы уже используете будут также работать с Laravel WebSockets)\r\nПолностью совместим с Laravel Echo\r\nСохраняет все основные характеристики Pusher (private и presence каналы, Pusher HTTP API)\r\n\r\nДокументацию для установки Laravel WebSockets можно найти здесь.\r\n\r\nДругие полезные сервисы Laravel\r\n\r\nLaravel Forge\r\n\r\nLaravel Forge сможет максимально упростить процессы конфигурирования и развертывание веб-приложения. Этот сервис берет на себя большую часть административной работы.\r\n\r\nОсновные характеристики:\r\n\r\nОбеспечивает легкое управление сервером через простой и понятный UI\r\nРаботает с Digital Ocean, Linode, AWS, Vultr провайдерами “прямо из коробки”\r\nДает возможность устанавливать пользовательскимиVPS\r\nПредоставляет сконфигурированный обновлённый софт для всех ваших нужд (Ubuntu, PHP, Nginx, MySQL и другие)\r\nПозволяет больше не мучаться с развертыванием и хостингом, а сконцентрироваться на разработке\r\nБерет на себя трудности с созданием и конфигурированием нового сервера\r\nПозволяет перезапустить каждый сервис и целый сервер напрямую через UI\r\nС легкостью устанавливает необходимые SSH ключи для доступа к серверу\r\nУстанавливает сертификаты SSL в считанные минуты\r\nПоддерживает LetsEncrypt (бесплатные SSL сертификаты) “прямо из коробки”\r\nПозволяет быстро сконфигурировать Nginx для доменов и поддоменов\r\nОбеспечивает простые настройки защищенной сети для горизонтального масштабирования\r\nПозволяет собирать, настраивать сервера и делиться ими с командой\r\nПозволяет прикреплять Git репозиторий к каждому сайту для конфигурирования\r\nПоддерживает GitHub, BitBucket, GitLab и пользовательские репозитории\r\nОбеспечивает авто-развертывания основанное на обновлении ветки Git\r\nПредоставляет простые скрипты для развёртыванияпозволяя запустить его с помощью “Deployment Trigger Url”\r\nКонфигурирует запланированные задачи, правила брандмауэра и очереди\r\nПодходит для любых PHP фреймворков\r\nОбеспечивает автоматическую установку и настройку для Blackfire и Papertail\r\n\r\nLaravel Forge это платный сервис. Цена зависит от выбранного плана и колеблется от 12$ до 39$ в месяц. Для каждого плана действует 5-дневная бесплатная пробная версия. Узнать больше про Laravel Forge можно на официальном сайте.\r\n\r\nLaravel Vapor\r\n\r\nА как насчет безсерверной платформы развертывания, которая делает всю работу за вас? Заверните мне две, пожалуйста. Я говорю о сервисе Laravel Vapor, который я лично нахожу весьма впечатляющим.\r\n\r\nОсновные характеристики:\r\n\r\nЭто авто-масштабируемая платформа поддерживаемая сервисом AWS Lambda\r\nПоставляется с авто-масштабируемой базой данных, кластерами кэша и воркерами очередей\r\nПозволяет с легкостью управлять инфраструктурой Laravel\r\nПозволяет напрямую загружать файлы на S3 с помощью встроенных JavaScript утилит Vapor\r\nОбеспечивает развертывание без простоя и его откаты\r\nДружествен к использованию CI\r\nПредоставляет переменные окружения, управление DNS и базами данных (включая восстановление на момент времени и масштабирование)\r\nПозволяет использовать пользовательские доменные имена\r\nПредоставляет возможность создания “секретов”. Это как переменные окружения, но зашифрованные в потоке, версионируемые и без лимита в 4 kb\r\nПоставляется с автозагрузкой активов (assets) в Cloudfront CDN во время развертывания\r\nПозволяет управлять и обновлять сертификаты\r\nПредоставляет уникальные человеко-понятные URLы для каждого окружения, обеспечивая быстрый просмотр\r\nПоддерживает ключевые метрики (приложения, базы данных и кэша)\r\nОбеспечивает туннели к базам данных и кешу, позволяя осуществлять простой локальный осмотр\r\nУкомплектован удобным CLI инструментом\r\n\r\nУ Laravel Vapor фиксированная цена для неограниченного количества проектов и развертываний. Месяц использования будет стоить $39, годовое использование — $399 (без учета оплаты за облако AWS). Подробную информацию можно получить на официальном сайте Laravel Vapor.\r\n\r\nChipper CI\r\n\r\nЕсли вы искали инструмент для непрерывной интеграции в Laravel, Chipper CI это то, что вам нужно.\r\n\r\nОсновные характеристики:\r\n\r\nЗапускает PHPUnit и Laravel Dusk тесты бесшовно и не требует дополнительных настроек\r\nОбеспечивает действительно быстрый и стабильный Laravel-ориентированный CI\r\nИспользует интеллектуальное кеширование зависимостей, позволяя ускорить сборку\r\nОбеспечивает легкую интеграцию развертывания с Laravel Forge, Envoyer и Vapor\r\n\r\nНу что тут скажешь, снимаю шляпу перед Дэвидом Хемфиллом и Крисом Фидао, которые создали этот отличный инструмент и облегчили жизнь любого Laravel разработчика. ChipperCI — платный сервис, который можно приобрести по цене $39 в месяц. Этот план идет с 14-дневным бесплатным пробным периодом и не ограничивает вас в количестве проектов, участников проектов и позволяет 1 конкурентную сборку. Посетите официальный сайт Chipper CI чтобы узнать все детали.\r\n\r\nFlare\r\n\r\nFlare — это инструмент для трекер ошибок, которого так ждали разработчики Laravel.\r\n\r\nОсновные характеристики:\r\n\r\nОбеспечивает моментальные решения для различных проблем и содержит необходимую для этого документацию\r\nОбеспечивает понятный и сфокусированный интерфейс для решения различных задач\r\nСобирает ошибки local и production окружений\r\nПозволяет Ignition старице ошибки автоматически исправить ошибку одним кликом\r\nПозволяет вам коллаборировать с помощью функции “поделиться исключением” чтобы эффективно исправлять ошибки\r\nПозволяет сократить время на исправление багов\r\nОбеспечивает трекинг исключений и уведомлений\r\n\r\nFlare дает 7-дневный бесплатный пробный период. Потом вы можете выбрать удобный для вас план. Есть 3 плана с ценами от $29 до $279 в месяц и 3 плана стоимостью от $319 до $3069 за год. Все детали можно посмотреть здесь.\r\n\r\nLaravel Shift\r\n\r\nА что если я скажу вам, что вы можете обновлять версии Laravel автоматически? Ну, в общем-то даже не вы, а Laravel Shift.\r\n\r\nОсновные характеристики:\r\n\r\nОбновляет версии Laravel автоматически и мгновенно\r\nОбеспечивает самый быстрый способ обновления любой версии Laravel\r\nЭкономит ваше время и бережет ваши нервы\r\nРаботает идеально с Bitbucket, Gitlab и GitHub проектами\r\nНе хранит копию вашего кода\r\n\r\nСервис Laravel Shift предлагает несколько планов, которые удовлетворят все ваши нужды. Цена варьируется от $7 до $59 в месяц. Подробную информацию можно получить здесь.\r\n\r\nLaravel Envoyer\r\n\r\nLaravel Envoyer — это сервис развертывания с нулевым простоем для ваших PHP и Laravel приложений.\r\n\r\nОсновные характеристики:\r\n\r\nОбеспечивает полностью функциональное приложение конечному пользователю в процессе проведения развертывания\r\nПоддерживает неограниченное количество настраиваемых развертываний на множество серверов, а также контроль работоспособности приложения\r\nОбеспечивает понятный и удобный UI для настройки развертывания\r\nИнтегрируется с GitLab, GitHub, Bitbucket и Slack\r\nПредоставляет возможность интеграции с self-hosted GitLab\r\nОтслеживает отложенные команды и задания\r\nОбеспечивает плавные откаты развертывания\r\nПозволяет неограниченное число участников команды и безлимитное количество развертываний\r\n\r\nЕжемесячная оплата Laravel Envoyer составляет $10-$50. Цена зависит от количества проектов. Сервис дает 5-дневный бесплатный пробный период. Для получения более детальной информации вы можете перейти на официальный сайт.\r\n\r\nЭкосистема Laravel набирает обороты\r\n\r\nКак по мне, получилась довольно впечатляющая подборка. Примите во внимание, что это еще не все существующие инструменты и сервисы, а только те, которые я сам высоко оцениваю.\r\n\r\nЯ вижу что фреймворк Laravel с каждым годом лишь набирает и набирает популярность. Сообщество Laravel растет с непреодолимой скоростью. Что это значит для нас? Как минимум то, что в 2019 и последующих годах количество новых инструментов и сервисов значительно вырастет. Их использование определенно ускоряет процесс разработки проектов и, конечно же совершенствуют их качество.\r\n\r\nLaravel делает процесс разработки эффективным и помогает реализовать самые безумные идеи. Если вы уже используете данный фреймворк, советую попробовать те инструменты, которые я здесь описал. Если же нет, вы можете сменить ваш текущий фреймворк в любой момент. С экосистемой Laravel очень легко работать и, поверьте, возвращаться к другому фреймворку вам уже не захочется.', '2022-01-15 21:00:00', '2022-01-16 21:00:00', NULL);

-- --------------------------------------------------------

--
-- Структура таблицы `roles`
--

CREATE TABLE `roles` (
  `id` int(10) UNSIGNED NOT NULL,
  `name` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `slug` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `description` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Дамп данных таблицы `roles`
--

INSERT INTO `roles` (`id`, `name`, `slug`, `description`, `created_at`, `updated_at`) VALUES
(1, 'Admin', 'admin', 'Administrator', '2022-11-14 18:08:42', '2022-11-14 18:08:42'),
(2, 'Manager', 'manager', 'Content manager', '2022-11-14 18:08:42', '2022-11-14 18:08:42'),
(3, 'Editor', 'editor', 'Record editor', '2022-11-14 18:08:42', '2022-11-14 18:08:42'),
(4, 'User', 'user', 'Simple user', '2022-11-14 18:08:42', '2022-11-14 18:08:42');

-- --------------------------------------------------------

--
-- Структура таблицы `role_permission`
--

CREATE TABLE `role_permission` (
  `role_id` int(10) UNSIGNED NOT NULL,
  `permission_id` int(10) UNSIGNED NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Дамп данных таблицы `role_permission`
--

INSERT INTO `role_permission` (`role_id`, `permission_id`, `created_at`, `updated_at`) VALUES
(1, 1, '2022-11-14 18:08:42', '2022-11-14 18:08:42'),
(1, 2, '2022-11-14 18:08:42', '2022-11-14 18:08:42'),
(2, 2, '2022-11-14 18:08:42', '2022-11-14 18:08:42'),
(3, 2, '2022-11-14 18:08:42', '2022-11-14 18:08:42'),
(4, 2, '2022-11-14 18:08:42', '2022-11-14 18:08:42'),
(1, 3, '2022-11-14 18:08:42', '2022-11-14 18:08:42'),
(2, 3, '2022-11-14 18:08:42', '2022-11-14 18:08:42'),
(3, 3, '2022-11-14 18:08:42', '2022-11-14 18:08:42'),
(1, 4, '2022-11-14 18:08:42', '2022-11-14 18:08:42'),
(2, 4, '2022-11-14 18:08:42', '2022-11-14 18:08:42'),
(3, 4, '2022-11-14 18:08:42', '2022-11-14 18:08:42'),
(1, 5, '2022-11-14 18:08:42', '2022-11-14 18:08:42'),
(2, 5, '2022-11-14 18:08:42', '2022-11-14 18:08:42'),
(3, 5, '2022-11-14 18:08:42', '2022-11-14 18:08:42'),
(1, 6, '2022-11-14 18:08:42', '2022-11-14 18:08:42'),
(2, 6, '2022-11-14 18:08:42', '2022-11-14 18:08:42'),
(3, 6, '2022-11-14 18:08:42', '2022-11-14 18:08:42');

-- --------------------------------------------------------

--
-- Структура таблицы `users`
--

CREATE TABLE `users` (
  `id` bigint(20) UNSIGNED NOT NULL,
  `name` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `email` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `email_verified_at` timestamp NULL DEFAULT NULL,
  `password` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `remember_token` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Дамп данных таблицы `users`
--

INSERT INTO `users` (`id`, `name`, `email`, `email_verified_at`, `password`, `remember_token`, `created_at`, `updated_at`) VALUES
(1, 'admin', 'putnyk@gmail.com', NULL, '$2y$10$h4piAFkv6viglicHmCqgA.ADxJMokbEQGlPa5M6dJNBUdxRBXS4Uq', 'g55tsPVy7ccWS03X3VE1SlrRVY862WlL0yeInPhmZnkSwIicUTl5C5NOpHq9', '2022-11-13 14:20:57', '2022-11-13 14:20:57'),
(2, 'Andrii', 'shinkarenko.andrii@gmail.com', NULL, '$2y$10$yDHhjWVxuyS5yHoCO.GXueR5sApKDRrtXFeCgetVHcOMSXAkN/Sxi', 'cGwrHqH70FTaHdntECVNpz6TFtdL1MbJoCNnFH0rxRakQCIp1aeVGsdfHCQI', '2022-11-12 11:34:16', '2022-11-12 11:34:16');

-- --------------------------------------------------------

--
-- Структура таблицы `user_role`
--

CREATE TABLE `user_role` (
  `user_id` bigint(20) UNSIGNED NOT NULL,
  `role_id` int(10) UNSIGNED NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Дамп данных таблицы `user_role`
--

INSERT INTO `user_role` (`user_id`, `role_id`, `created_at`, `updated_at`) VALUES
(1, 1, '2022-11-14 18:23:10', '2022-11-14 18:23:10'),
(2, 4, '2022-11-14 18:31:38', '2022-11-14 18:31:38');

--
-- Индексы сохранённых таблиц
--

--
-- Индексы таблицы `failed_jobs`
--
ALTER TABLE `failed_jobs`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `failed_jobs_uuid_unique` (`uuid`);

--
-- Индексы таблицы `migrations`
--
ALTER TABLE `migrations`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `password_resets`
--
ALTER TABLE `password_resets`
  ADD KEY `password_resets_email_index` (`email`);

--
-- Индексы таблицы `permissions`
--
ALTER TABLE `permissions`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `permissions_slug_unique` (`slug`);

--
-- Индексы таблицы `personal_access_tokens`
--
ALTER TABLE `personal_access_tokens`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `personal_access_tokens_token_unique` (`token`),
  ADD KEY `personal_access_tokens_tokenable_type_tokenable_id_index` (`tokenable_type`,`tokenable_id`);

--
-- Индексы таблицы `posts`
--
ALTER TABLE `posts`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `roles`
--
ALTER TABLE `roles`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `roles_slug_unique` (`slug`);

--
-- Индексы таблицы `role_permission`
--
ALTER TABLE `role_permission`
  ADD UNIQUE KEY `role_permission_permission_id_role_id_unique` (`permission_id`,`role_id`),
  ADD KEY `role_permission_role_id_foreign` (`role_id`);

--
-- Индексы таблицы `users`
--
ALTER TABLE `users`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `users_email_unique` (`email`);

--
-- Индексы таблицы `user_role`
--
ALTER TABLE `user_role`
  ADD UNIQUE KEY `user_role_user_id_role_id_unique` (`user_id`,`role_id`),
  ADD KEY `user_role_role_id_foreign` (`role_id`);

--
-- AUTO_INCREMENT для сохранённых таблиц
--

--
-- AUTO_INCREMENT для таблицы `failed_jobs`
--
ALTER TABLE `failed_jobs`
  MODIFY `id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT для таблицы `migrations`
--
ALTER TABLE `migrations`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=11;

--
-- AUTO_INCREMENT для таблицы `permissions`
--
ALTER TABLE `permissions`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=7;

--
-- AUTO_INCREMENT для таблицы `personal_access_tokens`
--
ALTER TABLE `personal_access_tokens`
  MODIFY `id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT для таблицы `posts`
--
ALTER TABLE `posts`
  MODIFY `id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=19;

--
-- AUTO_INCREMENT для таблицы `roles`
--
ALTER TABLE `roles`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=5;

--
-- AUTO_INCREMENT для таблицы `users`
--
ALTER TABLE `users`
  MODIFY `id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=4;

--
-- Ограничения внешнего ключа сохраненных таблиц
--

--
-- Ограничения внешнего ключа таблицы `role_permission`
--
ALTER TABLE `role_permission`
  ADD CONSTRAINT `role_permission_permission_id_foreign` FOREIGN KEY (`permission_id`) REFERENCES `permissions` (`id`) ON DELETE CASCADE,
  ADD CONSTRAINT `role_permission_role_id_foreign` FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE CASCADE;

--
-- Ограничения внешнего ключа таблицы `user_role`
--
ALTER TABLE `user_role`
  ADD CONSTRAINT `user_role_role_id_foreign` FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE CASCADE,
  ADD CONSTRAINT `user_role_user_id_foreign` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE CASCADE;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
